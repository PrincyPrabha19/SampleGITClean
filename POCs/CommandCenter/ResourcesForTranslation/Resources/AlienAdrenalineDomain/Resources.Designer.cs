//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlienLabs.AlienAdrenaline.Domain.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlienLabs.AlienAdrenaline.Domain.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AlienFX theme does not exist..
        /// </summary>
        public static string AlienFXDoesNotExistsErrorText {
            get {
                return ResourceManager.GetString("AlienFXDoesNotExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit, if open.
        /// </summary>
        public static string ApplicationExitIfOpenText {
            get {
                return ResourceManager.GetString("ApplicationExitIfOpenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch, if not open.
        /// </summary>
        public static string ApplicationLaunchIfNotOpenText {
            get {
                return ResourceManager.GetString("ApplicationLaunchIfNotOpenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launcher: {0}.
        /// </summary>
        public static string ApplicationPathText {
            get {
                return ResourceManager.GetString("ApplicationPathText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Executable: {0}.
        /// </summary>
        public static string ApplicationRealPathText {
            get {
                return ResourceManager.GetString("ApplicationRealPathText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} at {1}.
        /// </summary>
        public static string DateTimeFormat {
            get {
                return ResourceManager.GetString("DateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable AlienFX API (if supported).
        /// </summary>
        public static string EnableAlienFXAPIText {
            get {
                return ResourceManager.GetString("EnableAlienFXAPIText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Dark.
        /// </summary>
        public static string GoDarkText {
            get {
                return ResourceManager.GetString("GoDarkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string NoneText {
            get {
                return ResourceManager.GetString("NoneText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play Theme:.
        /// </summary>
        public static string PlayThemeHeaderText {
            get {
                return ResourceManager.GetString("PlayThemeHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power plan does not exist..
        /// </summary>
        public static string PowerPlanDoesNotExistsErrorText {
            get {
                return ResourceManager.GetString("PowerPlanDoesNotExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        public static string ReadyText {
            get {
                return ResourceManager.GetString("ReadyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not ready, verify it  is enabled and plugged in..
        /// </summary>
        public static string SoundDeviceErrorText {
            get {
                return ResourceManager.GetString("SoundDeviceErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game launch failed, verify you are connected to Steam network..
        /// </summary>
        public static string SteamGameLaunchFailedText {
            get {
                return ResourceManager.GetString("SteamGameLaunchFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game launch failed because Steam is not running..
        /// </summary>
        public static string SteamProcessNotRunningText {
            get {
                return ResourceManager.GetString("SteamProcessNotRunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thermal profile does not exist..
        /// </summary>
        public static string ThermalProfileDoesNotExistsErrorText {
            get {
                return ResourceManager.GetString("ThermalProfileDoesNotExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Current AlienFX State.
        /// </summary>
        public static string UseCurrentAlienFXStateText {
            get {
                return ResourceManager.GetString("UseCurrentAlienFXStateText", resourceCulture);
            }
        }
    }
}
