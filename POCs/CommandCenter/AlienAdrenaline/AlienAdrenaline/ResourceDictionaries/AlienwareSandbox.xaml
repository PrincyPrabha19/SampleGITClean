<ResourceDictionary
    x:Class="AlienLabs.AlienAdrenaline.App.ResourceDictionaries.AlienwareSandbox" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"	
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Resource dictionary entries should be defined here. -->

	<Style x:Key="ArrowUpDownCheckBoxStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox Stretch="Fill">
						<Grid Background="#00000000">
							<Ellipse x:Name="ellipseArrow" Width="267" Height="267" Canvas.Left="251" Canvas.Top="155.333" Stretch="Fill" StrokeThickness="20" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}"/>
							<Path x:Name="pathArrowUp" Width="158.333" Height="94" Canvas.Left="304.667" Canvas.Top="241.5" Stretch="Fill" StrokeThickness="40" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M 319.667,320.167L 383.333,256.5L 448,320.5"/>
							<Path x:Name="pathArrowDown" Width="158.5" Height="94.5" Canvas.Left="304.667" Canvas.Top="240.833" Stretch="Fill" StrokeThickness="40" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M 319.667,255.833L 384.167,320.333L 448.167,255.833"/>
						</Grid>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="pathArrowDown" Value="{DynamicResource AlienWhite}"/>
							<Setter Property="Stroke" TargetName="pathArrowUp" Value="{DynamicResource AlienWhite}"/>
							<Setter Property="Stroke" TargetName="ellipseArrow" Value="{DynamicResource AlienBlue}"/>
							<Setter Property="Visibility" TargetName="ellipseArrow" Value="Visible"/>
							<Setter Property="BitmapEffect" TargetName="pathArrowDown">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="{DynamicResource AlienBlueColor}" GlowSize="3"/>
								</Setter.Value>
							</Setter>
							<Setter Property="BitmapEffect" TargetName="pathArrowUp">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="{DynamicResource AlienBlueColor}" GlowSize="3"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="False">
							<Setter Property="Visibility" TargetName="ellipseArrow" Value="Hidden"/>
						</Trigger>									
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Visibility" TargetName="pathArrowUp" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="pathArrowDown" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <SolidColorBrush x:Key="AlienBlue" Color="#FF2EB8FF"/>
    <SolidColorBrush x:Key="AlienLightGray" Color="#FFC8C8C8"/>
	
	<Style x:Key="ArrowUpDownCheckBoxStyle2" TargetType="{x:Type CheckBox}">
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type CheckBox}">
    				<Viewbox Stretch="Fill">
    					<Grid Background="#00000000" Width="267" Height="267">
    						<Path x:Name="pathArrowUp" Width="158.333" Height="94" Canvas.Left="304.667" Canvas.Top="241.5" Stretch="Fill" StrokeThickness="40" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M 319.667,320.167L 383.333,256.5L 448,320.5"/>
    						<Path x:Name="pathArrowDown" Width="158.5" Height="94.5" Canvas.Left="304.667" Canvas.Top="240.833" Stretch="Fill" StrokeThickness="40" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M 319.667,255.833L 384.167,320.333L 448.167,255.833"/>
    					</Grid>
    				</Viewbox>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="BitmapEffect" TargetName="pathArrowDown">
    							<Setter.Value>
    								<OuterGlowBitmapEffect GlowColor="{DynamicResource AlienBlueColor}" GlowSize="3"/>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="BitmapEffect" TargetName="pathArrowUp">
    							<Setter.Value>
    								<OuterGlowBitmapEffect GlowColor="{DynamicResource AlienBlueColor}" GlowSize="3"/>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="Stroke" TargetName="pathArrowUp" Value="{DynamicResource AlienBlue}"/>
    						<Setter Property="Stroke" TargetName="pathArrowDown" Value="{DynamicResource AlienBlue}"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="False">
    						<Setter Property="Stroke" TargetName="pathArrowDown" Value="{DynamicResource AlienLightGray}"/>
    						<Setter Property="Stroke" TargetName="pathArrowUp" Value="{DynamicResource AlienLightGray}"/>
    					</Trigger>									
    					<Trigger Property="IsChecked" Value="False">
    						<Setter Property="Visibility" TargetName="pathArrowUp" Value="Collapsed"/>
    					</Trigger>
    					<Trigger Property="IsChecked" Value="True">
    						<Setter Property="Visibility" TargetName="pathArrowDown" Value="Collapsed"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

    <Style x:Key="buttonAlienFX" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}"/>
                        <Label Margin="0,0,0,0" x:Name="labelCaption" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,3,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="BitmapEffect" TargetName="rectangleOutter" Value="{DynamicResource AlienBlueGlow}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FFFFFFFF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="checkBoxAlienFX" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="#8E8F8F"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter"/>
                        <Storyboard x:Key="OnMouseLeave"/>
                    </ControlTemplate.Resources>
                    <Grid Height="34.246">
                        <Rectangle Stroke="{DynamicResource AlienLightGray}" HorizontalAlignment="Left" Margin="5.986,6.988,0,10.258" x:Name="rectangleCheckbox" Width="17">
                            <Rectangle.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="#00000000" Offset="1"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Label Margin="30.275,0,2.024,0" VerticalAlignment="Center" Height="33.96" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" HorizontalContentAlignment="Left" Padding="0,0,0,0" VerticalContentAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" x:Name="labelCaption"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="rectangleCheckbox">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF5FBFF" Offset="0"/>
                                        <GradientStop Color="#FF0096E3" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienLightGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleCheckbox" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="radioButtonColor" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="#8E8F8F"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.15"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.15"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.33333"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="2"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecked">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangleOutter">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.15"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangleOutter">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.15"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="rectangleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{TemplateBinding BorderBrush}" HorizontalAlignment="Stretch" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" Fill="{TemplateBinding Background}">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard x:Name="OnUnchecked_BeginStoryboard" Storyboard="{StaticResource OnUnchecked}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard x:Name="OnChecked_BeginStoryboard" Storyboard="{StaticResource OnChecked}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="radioButtonAlienFX" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Rectangle x:Name="rectengleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="#FF969696" Fill="#FF000000" Height="Auto" Margin="0,0,0,0"/>
                        <Path Fill="#FF969696" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" StrokeThickness="1.33333" x:Name="triangleLeft" Width="9.447" Height="Auto" Data="M27.431614,115.90823 L27.431614,135.22583 35.545139,125.95314 z" HorizontalAlignment="Left" Margin="0.995,3,0,3"/>
                        <Label x:Name="labelCaption" Height="Auto" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="#FFC8C8C8" VerticalContentAlignment="Center" Padding="15,0,0,0" HorizontalAlignment="Stretch" Margin="0,0,0,0" Width="Auto"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Fill" TargetName="triangleLeft" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Fill" TargetName="triangleLeft" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="Fill" TargetName="rectengleOutter">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FF000000" Offset="0"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="OnUnchecked">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangleOutter">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.15"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangleOutter">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.15"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="OnChecked">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.15"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.15"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleOutter" Storyboard.TargetProperty="(Shape.StrokeThickness)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.33333"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="2"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="radioButtonStandardAction" BasedOn="{x:Null}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid HorizontalAlignment="Stretch" Width="Auto" Height="25">
                        <Rectangle x:Name="rectangleOuter1" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Margin="0,0,0,0"/>
                        <Rectangle x:Name="rectangleColor1" Width="25.333" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" HorizontalAlignment="Right" Margin="0,0,0,0" Fill="{Binding Path=Zone.PrimaryInitialColor}"/>
                        <Label Content="{Binding Path=Zone.Name}" HorizontalAlignment="Stretch" Margin="2,0,26,0" x:Name="labelCaption" VerticalAlignment="Stretch" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="#66FFFFFF" VerticalContentAlignment="Center" Padding="5,3,0,0" Style="{DynamicResource LabelWithEllipsisStyle}" Background="{x:Null}" HorizontalContentAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOuter1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                            <Setter Property="Fill" TargetName="rectangleOuter1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOuter1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="OnMouseEnter">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="labelCaption" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF969696"/>
            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FFFFFFFF"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangleCheckbox" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF969696"/>
            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF2EB8FF"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="OnMouseLeave">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="labelCaption">
            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFFFFFF"/>
            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF969696"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangleCheckbox">
            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF2EB8FF"/>
            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF969696"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="checkBoxButton" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="#8E8F8F"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>
                    <Grid Height="25" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" x:Name="grid">
                        <Label Margin="0,0,30,0" VerticalAlignment="Stretch" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" HorizontalContentAlignment="Right" Padding="0,3,0,0" VerticalContentAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" x:Name="labelCaption" HorizontalAlignment="Right" Content="{TemplateBinding Content}" Style="{DynamicResource LabelWithEllipsisStyle}" Width="Auto"/>
                        <Rectangle x:Name="rectangleCheckbox" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" HorizontalAlignment="Right" Margin="0,4,4,4" VerticalAlignment="Stretch" Width="17.34" Height="Auto" Visibility="Visible"/>
                        <Path Stretch="Fill" Fill="{DynamicResource AlienLightGray}" Data="F1 M 435.351,371.23C 431.668,371.23 428.683,368.248 428.683,364.566L 428.683,362.873C 428.683,359.19 431.668,356.208 435.351,356.206L 443.403,356.208C 446.733,356.208 449.49,358.646 449.987,361.836L 452.678,361.836C 453.176,358.646 455.935,356.208 459.265,356.206L 467.318,356.208C 471,356.208 473.982,359.19 473.982,362.873L 473.982,364.566C 473.982,368.248 471,371.23 467.318,371.234L 459.265,371.23C 456.017,371.23 453.312,368.911 452.719,365.837L 449.947,365.837C 449.354,368.911 446.652,371.231 443.403,371.234L 435.351,371.23 Z M 431.349,362.873L 431.349,364.566C 431.354,366.772 433.142,368.56 435.351,368.565L 443.403,368.565C 445.165,368.561 446.661,367.42 447.194,365.837L 442.666,365.837C 441.561,365.837 440.666,364.94 440.666,363.837C 440.666,362.73 441.561,361.836 442.666,361.836L 447.265,361.836C 446.806,360.131 445.25,358.877 443.403,358.875L 435.351,358.872C 433.142,358.877 431.354,360.665 431.349,362.873 Z M 459.265,368.565L 467.318,368.565C 469.524,368.56 471.313,366.772 471.317,364.566L 471.317,362.873C 471.313,360.665 469.524,358.877 467.318,358.875L 459.265,358.872C 457.415,358.876 455.861,360.131 455.402,361.836L 461.334,361.836C 462.436,361.836 463.334,362.73 463.334,363.837C 463.334,364.94 462.436,365.837 461.334,365.837L 455.473,365.837C 456.006,367.42 457.501,368.561 459.265,368.565 Z " HorizontalAlignment="Right" Width="30" x:Name="pathChain" Margin="0,8,27,0" VerticalAlignment="Top" Height="10" Visibility="{Binding Path=Content, ElementName=labelCaption, Mode=Default}"/>
                        <Rectangle x:Name="rectangleMouseOver" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Width="Auto" Height="Auto" Visibility="Visible" Fill="#00000000" HorizontalAlignment="Stretch" Margin="4,4,4,4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="rectangleCheckbox">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FF23B8FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                            <Setter Property="Fill" TargetName="pathChain" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                            <Setter Property="Stroke" TargetName="rectangleCheckbox" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Fill" TargetName="pathChain" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="radioButtonPlayPowerStatus" BasedOn="{x:Null}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid VerticalAlignment="Top" Height="25" >
                        <Rectangle x:Name="rectangleLabel" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" HorizontalAlignment="Stretch" Margin="0,0,0,0"/>
                        <Label Content="{Binding Path=Zone.Name}" x:Name="labelCaption" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="#FFC8C8C8" VerticalContentAlignment="Center" Padding="5,3,0,0" Style="{DynamicResource LabelWithEllipsisStyle}" Margin="6,0,130,0" HorizontalContentAlignment="Center" Background="{x:Null}" Width="20"/>
                        <Grid HorizontalAlignment="Right" Margin="0,0,0,0" x:Name="gridControls" Width="121.575">
                            <Rectangle x:Name="rectangleColor1" Width="24" StrokeThickness="1.33333" Stroke="{DynamicResource AlienLightGray}" Fill="{Binding Path=Zone.PrimaryInitialColor}" HorizontalAlignment="Left" Margin="29,4,0,4"/>
                            <Rectangle x:Name="rectangleColor2" Width="24" StrokeThickness="1.33333" Stroke="{DynamicResource AlienLightGray}" Fill="{Binding Path=Zone.SecondaryInitialColor}" HorizontalAlignment="Right" Margin="0,4,4,4"/>
                            <Path x:Name="pathPluggedIn" Stretch="Fill" Fill="#FFC8C8C8" Data="F1 M 78.1255,13.5879L 93.5216,13.5879C 93.5216,13.5879 93.8071,15.6634 95.8028,15.521L 97.7993,17.0895L 105.07,17.0895L 105.497,15.9489L 111.913,15.9489L 112.055,14.5235L 105.354,14.5235L 105.354,12.8126L 105.354,12.5208L 105.354,10.8106L 112.055,10.8106L 111.913,9.38367L 105.497,9.38367L 105.07,8.24384L 97.7993,8.24384L 95.8028,9.81238C 93.8071,9.66998 93.5216,11.7463 93.5216,11.7463L 78.1255,11.7463L 78.1255,13.5879 Z " Width="25" Height="Auto" d:LayoutOverrides="VerticalAlignment" HorizontalAlignment="Left" Margin="0,7.602,0,7.602"/>
                            <Path Fill="#FFC8C8C8" Stretch="Fill" Stroke="#FFC8C8C8" StrokeMiterLimit="2.75" StrokeThickness="0.666667" x:Name="pathBattery" Data="F1 M1.2783629,0.33333337 L30.886168,0.33333337 C31.405569,0.33333352 31.831968,0.7557925 31.831968,1.2721213 L31.831968,3.9460948 31.501867,3.9460948 C31.39937,3.6754134 31.280474,3.4540391 31.157568,3.2678065 L31.157568,1.3362908 1.4888033,1.3362908 1.4888033,3.6965156 0.99516338,3.6965156 0.99516338,8.3802843 1.4888033,8.3802843 1.4888033,10.611468 31.157568,10.611468 31.157568,8.6979132 31.35545,8.3787518 31.355429,8.3787518 C30.87768,9.2834024 30.208002,9.4123611 30.192129,9.4153042 L30.192129,8.3787518 14.204655,8.3787518 14.204655,3.9460995 30.192129,3.9460995 30.192129,2.4362049 C30.192129,2.4362051 31.023029,2.6818657 31.501827,3.9460995 L34.528622,3.9460995 34.528622,8.3787518 31.831968,8.3787518 31.831968,10.676369 C31.831968,11.193467 31.405569,11.615967 30.886168,11.615967 L1.2783629,11.615967 C0.75891328,11.615967 0.33333349,11.193467 0.33333349,10.676369 L0.33333349,1.2721213 C0.33333349,0.7557925 0.75891328,0.33333352 1.2783629,0.33333337 z" Width="25" Height="Auto" d:LayoutOverrides="VerticalAlignment" HorizontalAlignment="Right" Margin="0,7.437,32,7.437"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="Stroke" TargetName="rectangleLabel" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor2" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Fill" TargetName="rectangleLabel">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleLabel" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor1" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor2" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="0"/>
    </Style>

    <Style x:Key="UPRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Group" Width="Auto" Height="Auto">
                        <Rectangle x:Name="Rectangle" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Margin="0,0,0,0" Fill="#00000000"/>
                        <Path x:Name="Path" Width="12.945" Height="7.028" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M6,12.5 L11.119853,6.533164 16.119329,12.529621" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MIDDLEThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Group" Width="Auto" Height="Auto">
                        <Rectangle x:Name="Rectangle" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Fill="#00000000" RadiusX="0" RadiusY="0" Margin="0,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BOTTOMRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Group" Width="Auto" Height="Auto">
                        <Rectangle x:Name="Rectangle" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Margin="0,0,0,0" Fill="#00000000"/>
                        <Path x:Name="Path" Width="12.945" Height="7.028" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M6,12.5 L11.119853,6.533164 16.119329,12.529621" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AlienVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="#675A5A5A"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="true" x:Name="Bg" Background="{DynamicResource AlienScrollBackColor}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource UPRepeatButtonStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" Command="{x:Static ScrollBar.LineUpCommand}"/>
                        <Track IsEnabled="{TemplateBinding IsMouseOver}" x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource MIDDLEThumbStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource BOTTOMRepeatButtonStyle}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" Command="{x:Static ScrollBar.LineDownCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Microsoft_Windows_Themes:ScrollChrome SnapsToDevicePixels="true" x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Microsoft_Windows_Themes:ScrollChrome SnapsToDevicePixels="true" x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LEFTRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Group" Width="Auto" Height="Auto">
                        <Rectangle x:Name="Rectangle" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Margin="0,0,0,0" Fill="#00000000"/>
                        <Path x:Name="Path" Width="12.945" Height="7.028" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M6,12.5 L11.119853,6.533164 16.119329,12.529621" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RIGHTRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Group" Width="Auto" Height="Auto">
                        <Rectangle x:Name="Rectangle" Width="Auto" Height="Auto" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Margin="0,0,0,0" Fill="#00000000"/>
                        <Path x:Name="Path" Width="12.945" Height="7.028" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Data="F1 M6,12.5 L11.119853,6.533164 16.119329,12.529621" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AlienHorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="#675A5A5A"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="true" x:Name="Bg" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" Command="{x:Static ScrollBar.LineUpCommand}"/>
                        <Track IsEnabled="{TemplateBinding IsMouseOver}" x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" Command="{x:Static ScrollBar.LineDownCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="#675A5A5A"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true" x:Name="Bg" Background="{DynamicResource AlienScrollBackColor}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource LEFTRepeatButtonStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow" Command="{x:Static ScrollBar.LineLeftCommand}"/>
                                <Track IsEnabled="{TemplateBinding IsMouseOver}" x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource MIDDLEThumbStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource RIGHTRepeatButtonStyle}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow" Command="{x:Static ScrollBar.LineRightCommand}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="AlienScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle Fill="{DynamicResource AlienScrollBackColor}" x:Name="Corner" Grid.Column="1" Grid.Row="1"/>
            <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="0" Grid.Row="0" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
            <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Style="{DynamicResource AlienVerticalScrollBarStyle}" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar" Style="{DynamicResource AlienHorizontalScrollBarStyle}"/>
        </Grid>
    </ControlTemplate>
    <SolidColorBrush x:Key="AlienDarkGray" Color="#FF878787"/>
    <SolidColorBrush x:Key="AlienScrollBackColor" Color="#675A5A5A"/>
    <SolidColorBrush x:Key="AlienWhite" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AlienYellow" Color="#FFF8C72C"/>

    <Style x:Key="LabelWithEllipsisStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="TextContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" ContentTemplate="{DynamicResource TextBlockWithEllipsis}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TextBlockWithEllipsis">
        <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" RenderTransformOrigin="0.5,0.5" FontWeight="Normal" x:Name="TextBlock" ToolTip="{Binding Path=Text, ElementName=TextBlock, Mode=Default}" ToolTipOpening="textBlock_ToolTipOpening">
			<TextBlock.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="1" ScaleY="1"/>
					<SkewTransform AngleX="0" AngleY="0"/>
					<RotateTransform Angle="1440"/>
					<TranslateTransform X="0" Y="0"/>
				</TransformGroup>
			</TextBlock.RenderTransform>
        </TextBlock>
    </DataTemplate>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Style x:Key="AlienButtonADD" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto">
                        <Rectangle Fill="#00FFFFFF" Stroke="{x:Null}" x:Name="fondo"/>
                        <Viewbox x:Name="Group" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto">
                            <Canvas Width="29.2222" Height="24.3334">
                                <Rectangle x:Name="Rectangle" Width="29.2222" Height="24.3334" Canvas.Left="1.01626e-005" Canvas.Top="1.01626e-005" Stretch="Fill" StrokeThickness="0.666667" StrokeLineJoin="Round" Stroke="#C07D7D7D">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.490392,0.0440928" EndPoint="0.490392,1.29458">
                                            <GradientStop Color="#C0000000" Offset="0"/>
                                            <GradientStop Color="#C0656565" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="Rectangle_0" Width="28.5555" Height="12.1503" Canvas.Left="0.333344" Canvas.Top="0.333344" Stretch="Fill">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.543478,0.0869566" EndPoint="0.543478,0.921741">
                                            <GradientStop Color="#60FFFFFF" Offset="0.00854701"/>
                                            <GradientStop Color="#17FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Canvas>
                        </Viewbox>
                        <Path x:Name="Plus" Width="10" Height="10" Canvas.Left="43.3333" Canvas.Top="705.201" Stretch="Fill" Fill="{DynamicResource AlienLightGray}" Data="F1 M 50.6777,709.664L 55.526,709.664L 55.526,711.897L 50.6777,711.897L 50.6777,716.961L 48.1816,716.961L 48.1816,711.897L 43.3333,711.897L 43.3333,709.664L 48.1816,709.664L 48.1816,705.201L 50.6777,705.201L 50.6777,709.664 Z " ClipToBounds="False" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Plus" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Plus" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Plus" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlienButtonDelete" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto">
                        <Viewbox x:Name="Group" Width="Auto" Height="Auto">
                            <Canvas Width="29.2222" Height="24.3334">
                                <Rectangle x:Name="Rectangle" Width="29.2222" Height="24.3334" Canvas.Left="1.01626e-005" Canvas.Top="1.01626e-005" Stretch="Fill" StrokeThickness="0.666667" StrokeLineJoin="Round" Stroke="#C07D7D7D">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.490392,0.0440928" EndPoint="0.490392,1.29458">
                                            <GradientStop Color="#C0000000" Offset="0"/>
                                            <GradientStop Color="#C0656565" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="Rectangle_0" Width="28.5555" Height="12.1503" Canvas.Left="0.333344" Canvas.Top="0.333344" Stretch="Fill">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.543478,0.0869566" EndPoint="0.543478,0.921741">
                                            <GradientStop Color="#60FFFFFF" Offset="0.00854701"/>
                                            <GradientStop Color="#17FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Canvas>
                        </Viewbox>
                        <Rectangle Fill="#00FFFFFF" Stroke="{x:Null}" Margin="0,0,0,0" x:Name="fondo"/>
                        <Rectangle x:Name="Minus" Stretch="Fill" Stroke="{DynamicResource AlienLightGray}" Width="10" Height="2" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Minus" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Minus" Value="{DynamicResource AlienBlue}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="Minus" Value="{DynamicResource AlienWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
    <Style x:Key="AlienTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Template="{DynamicResource AlienScrollViewer}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <OuterGlowBitmapEffect x:Key="AlienBlueGlow" GlowColor="#FF2EB8FF"/>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,21,4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="#00000000" BorderBrush="{DynamicResource AlienLightGray}" BorderThickness="1,1,1,1">
                        <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path Fill="{DynamicResource AlienLightGray}" HorizontalAlignment="Left" Margin="0,0,0,0" x:Name="Arrow" VerticalAlignment="Center" Width="9.202" Height="7.885" Data="M-1.0195788E-56,1.8352419E-55 L4.8244244,7.8846267 9.2016671,0.0091323663 z"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource AlienWhite}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource AlienBlue}"/>
                            <Setter Property="BitmapEffect" TargetName="border" Value="{DynamicResource AlienBlueGlow}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer Focusable="false" x:Name="PART_ContentHost" Background="Transparent" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true" x:Name="Chrome" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false">
                        <Path Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" x:Name="Arrow" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true" x:Name="Placement">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup" Grid.ColumnSpan="2">
                <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, ElementName=Placement}" x:Name="Shdw" Color="Transparent">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
            <TextBox Margin="{TemplateBinding Padding}" x:Name="PART_EditableTextBox" Style="{StaticResource ComboBoxEditableTextBox}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ToggleButton Style="{StaticResource ComboBoxToggleButton}" Grid.Column="1" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="AlienComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true" x:Name="MainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="1" x:Name="PART_Popup" Grid.ColumnSpan="2">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}" x:Name="Shdw" Color="Transparent">
                                <Border x:Name="DropDownBorder" Background="#7F000000" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                    <ScrollViewer Foreground="{DynamicResource AlienLightGray}" CanContentScroll="true" Template="{DynamicResource AlienScrollViewer}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AlienComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3,3,3,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Height="25" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Height="Auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource AlienLightGray}"/>
    </Style>
    <!--
	<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
-->
    <Style x:Key="BasicZonesListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource AlienScrollViewer}" x:Name="scrollViewerZones">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoBlueListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InvisibleToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="#00FFFFFF"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="HorizontalItemsPanelTemplate">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </ItemsPanelTemplate>
    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="1" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="14,0,0,0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButtonDeviceStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" Margin="0,0,0,5">
                        <Image Stretch="None" Source="{Binding Path=Thumbnail}" x:Name="image" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Cursor="Hand">
                            <Image.BitmapEffect>
                                <OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.4"/>
                            </Image.BitmapEffect>
                        </Image>
                        <Image Stretch="None" Source="{Binding Path=PresenceStatus}" x:Name="imageStatus" HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="True" Cursor="Hand"/>
                        <Image HorizontalAlignment="Right" VerticalAlignment="Top" Source="Images\corner.png" x:Name="imageLeftTop" Visibility="Hidden" Width="7" Height="7"/>
                        <Image HorizontalAlignment="Right" VerticalAlignment="Bottom" Source="Images\corner.png" x:Name="imageLeftBottom" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" Width="7" Height="7">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Source="Images\corner.png" x:Name="imageRightTop" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" Width="7" Height="7">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                        <Image HorizontalAlignment="Left" VerticalAlignment="Bottom" Source="Images\corner.png" x:Name="imageRigthBottom" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" Width="7" Height="7">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1" ScaleY="-1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BitmapEffect" TargetName="image">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="#FF2EB8FF" GlowSize="8" Opacity="1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="imageLeftTop" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="imageLeftBottom" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="imageRightTop" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="imageRigthBottom" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OKButtonStyleWithIconAndText" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}"/>
                        <Label Margin="0,0,0,0" x:Name="label" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,3,0,0"/>
                        <Path Stretch="Fill" Fill="#FF00FF00" Data="F1 M 373.324,431.566L 374.21,434.379C 371.518,435.368 368.168,438.077 364.158,442.504C 360.685,446.654 358.177,452.364 356.632,459.639L 356.319,462.452L 356.319,463.051C 356.319,463.884 354.844,465.264 351.892,467.191L 348.507,469.691L 348.194,469.691C 347.413,469.691 347.022,469.248 347.022,468.363C 347.022,462.304 348.793,455.603 352.335,448.259C 357.248,440.29 364.045,434.778 372.725,431.722L 373.324,431.566 Z " HorizontalAlignment="Center" Margin="0,5,0,5" x:Name="pathOk" VerticalAlignment="Stretch" Width="30" Visibility="{Binding Path=Content, ElementName=label, Mode=Default}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="label" Value="#FFFFFFFF"/>
                            <Setter Property="BitmapEffect" TargetName="rectangleOutter" Value="{DynamicResource AlienBlueGlow}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FFFFFFFF"/>
                            <Setter Property="Foreground" TargetName="label" Value="#FFFFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CANCELButtonStyleWithIconAndText" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}"/>
                        <Label Margin="0,0,0,0" x:Name="label" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,3,0,0"/>
                        <Path Stretch="Fill" Fill="#FFFF0000" Data="F1 M 550.019,431.566C 552.243,432.122 555.253,433.554 559.056,435.863C 560.863,434.405 563.717,432.972 567.623,431.566L 567.91,431.566L 568.795,434.379C 566.191,435.698 564.126,437.122 562.597,438.65C 566.678,442.208 569.186,445.065 570.123,447.217C 571.444,449.04 572.728,451.853 573.978,455.655C 575.454,460.759 576.191,465.143 576.191,468.806L 576.191,468.962C 575.931,469.448 575.532,469.691 574.993,469.691L 574.707,469.691C 570.61,466.775 568.05,464.804 567.024,463.78L 566.868,463.051L 566.868,462.295C 566.868,457.643 564.751,451.635 560.514,444.275L 558.899,442.348C 555.272,446.566 552.66,452.53 551.061,460.238L 550.905,462.452L 550.905,463.051C 550.905,463.884 549.431,465.264 546.478,467.191L 543.092,469.691L 542.78,469.691C 541.998,469.691 541.608,469.248 541.608,468.363C 541.608,462.113 543.483,455.221 547.233,447.686C 548.378,445.534 551.035,442.478 555.201,438.519C 553.155,436.853 551.087,435.42 549.003,434.222C 549.472,432.452 549.811,431.566 550.019,431.566 Z " HorizontalAlignment="Center" x:Name="pathCancel" VerticalAlignment="Stretch" Margin="0,5,0,5" Visibility="{Binding Path=Content, ElementName=label, Mode=Default}" Width="30"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="label" Value="#FFFFFFFF"/>
                            <Setter Property="BitmapEffect" TargetName="rectangleOutter" Value="{DynamicResource AlienBlueGlow}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangleOutter" Value="#FFFFFFFF"/>
                            <Setter Property="Foreground" TargetName="label" Value="#FFFFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabelColorRadioButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Morph">
                        <Rectangle x:Name="rectengleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Fill="#FF000000" Height="Auto" Margin="0,0,0.081,0" VerticalAlignment="Stretch"/>
                        <Label HorizontalAlignment="Left" x:Name="labelCaption" VerticalAlignment="Center" Height="Auto" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" VerticalContentAlignment="Center" Padding="0,3,0,0" Margin="6,6,40,6" d:LayoutOverrides="Height"/>
                        <Rectangle Visibility="Visible" Fill="{TemplateBinding Foreground}" StrokeThickness="1.33333" HorizontalAlignment="Right" x:Name="rectangleColor" Width="40" Stroke="{DynamicResource AlienLightGray}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="Fill" TargetName="rectengleOutter">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FF000000" Offset="0"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabelPulseRadioButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Morph">
                        <Rectangle x:Name="rectengleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Fill="#FF000000" Height="Auto" Margin="0,0,0.081,0" VerticalAlignment="Stretch"/>
                        <Label HorizontalAlignment="Left" x:Name="labelCaption" VerticalAlignment="Center" Height="Auto" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="#FFC8C8C8" VerticalContentAlignment="Center" Padding="0,3,0,0" Margin="6,6,0,6"/>
                        <Rectangle Visibility="Visible" x:Name="rectangleColor" Width="40" StrokeThickness="1.33333" HorizontalAlignment="Right" Stroke="{DynamicResource AlienLightGray}"/>
                        <Path x:Name="wave" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 220.806,299.405C 220.345,301.213 219.488,304.579 218.756,304.895C 218.132,304.55 217.299,301.207 216.852,299.41C 215.89,295.553 214.983,291.91 212.324,291.91C 209.644,291.91 208.722,295.551 207.747,299.406C 207.291,301.21 206.441,304.57 205.714,304.897C 205.091,304.554 204.254,301.207 203.805,299.407C 202.841,295.552 201.931,291.91 199.269,291.91C 196.617,291.91 195.714,295.555 194.759,299.414C 194.315,301.207 193.488,304.544 192.776,304.902C 192.152,304.571 191.3,301.209 190.843,299.403C 189.867,295.55 188.944,291.91 186.264,291.91L 186.264,294.576L 186.222,294.569C 186.949,294.895 187.8,298.253 188.257,300.058C 189.235,303.914 190.157,307.556 192.839,307.556C 195.489,307.556 196.391,303.912 197.347,300.055C 197.791,298.261 198.619,294.921 199.332,294.564C 199.932,294.912 200.768,298.257 201.218,300.054C 202.182,303.912 203.092,307.556 205.756,307.556C 208.436,307.556 209.358,303.915 210.333,300.059C 210.789,298.255 211.639,294.896 212.367,294.569C 212.984,294.915 213.817,298.259 214.264,300.055C 215.226,303.912 216.134,307.556 218.792,307.556C 221.481,307.556 222.407,303.916 223.389,300.063C 223.85,298.254 224.708,294.886 225.441,294.57L 225.404,291.91C 222.714,291.91 221.787,295.551 220.806,299.405 Z " HorizontalAlignment="Right" VerticalAlignment="Center" Width="38" d:LayoutOverrides="HorizontalAlignment" Height="25" Margin="0,0,1,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Fill" TargetName="wave" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="Fill" TargetName="rectengleOutter">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FF000000" Offset="0"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="wave" Value="#FFFFFFFF"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionColorRadioButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Morph" Height="25" Width="80">
                        <Rectangle x:Name="rectengleOutter" Stretch="Fill" StrokeThickness="1.33333" StrokeLineJoin="Round" Stroke="{DynamicResource AlienLightGray}" Fill="#FF000000" Height="Auto" Margin="0,0,0.081,0" VerticalAlignment="Stretch"/>
                        <Label HorizontalAlignment="Center" x:Name="labelCaption" VerticalAlignment="Center" Height="Auto" Content="{Binding Path=Zone.Name}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource AlienLightGray}" VerticalContentAlignment="Center" Padding="0,3,0,0" Margin="6,0,30,0" d:LayoutOverrides="Height" HorizontalContentAlignment="Left"/>
                        <Rectangle Visibility="Visible" Fill="{Binding Path=Zone.FirstAction}" StrokeThickness="1.33333" HorizontalAlignment="Right" x:Name="rectangleColor" Width="24" Stroke="{DynamicResource AlienLightGray}" Margin="0,4,4,4"/>
                        <Path x:Name="wave" Fill="{Binding Path=Zone.FirstAction}" Stretch="Fill" Data="F1 M 220.806,299.405C 220.345,301.213 219.488,304.579 218.756,304.895C 218.132,304.55 217.299,301.207 216.852,299.41C 215.89,295.553 214.983,291.91 212.324,291.91C 209.644,291.91 208.722,295.551 207.747,299.406C 207.291,301.21 206.441,304.57 205.714,304.897C 205.091,304.554 204.254,301.207 203.805,299.407C 202.841,295.552 201.931,291.91 199.269,291.91C 196.617,291.91 195.714,295.555 194.759,299.414C 194.315,301.207 193.488,304.544 192.776,304.902C 192.152,304.571 191.3,301.209 190.843,299.403C 189.867,295.55 188.944,291.91 186.264,291.91L 186.264,294.576L 186.222,294.569C 186.949,294.895 187.8,298.253 188.257,300.058C 189.235,303.914 190.157,307.556 192.839,307.556C 195.489,307.556 196.391,303.912 197.347,300.055C 197.791,298.261 198.619,294.921 199.332,294.564C 199.932,294.912 200.768,298.257 201.218,300.054C 202.182,303.912 203.092,307.556 205.756,307.556C 208.436,307.556 209.358,303.915 210.333,300.059C 210.789,298.255 211.639,294.896 212.367,294.569C 212.984,294.915 213.817,298.259 214.264,300.055C 215.226,303.912 216.134,307.556 218.792,307.556C 221.481,307.556 222.407,303.916 223.389,300.063C 223.85,298.254 224.708,294.886 225.441,294.57L 225.404,291.91C 222.714,291.91 221.787,295.551 220.806,299.405 Z " HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="20.901" d:LayoutOverrides="HorizontalAlignment" Margin="0,5.5,5.5,5.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="#FFFFFFFF"/>
                            <Setter Property="Fill" TargetName="rectengleOutter">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FF000000" Offset="0"/>
                                        <GradientStop Color="#FF2EB8FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="#FF2EB8FF"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="#FF2EB8FF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="rectengleOutter" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Stroke" TargetName="rectangleColor" Value="{DynamicResource AlienDarkGray}"/>
                            <Setter Property="Foreground" TargetName="labelCaption" Value="{DynamicResource AlienDarkGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    


</ResourceDictionary>